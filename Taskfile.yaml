version: 3

silent: true

includes:
  shims:
    internal: true
    taskfile: .shims

  tests-data-plans:
    internal: true
    taskfile: tests/data/plans

  build:
    taskfile: build

vars:
  NENV: "node_modules"

  LLVM_TARGET_COVERAGE: "97"

tasks:
  _prettier:
    internal: true
    cmds:
      - "{{.NENV}}/.bin/prettier {{.COMMAND}}"

  _with_nvm:
    internal: true
    cmds:
      - "source ${HOME}/.nvm/nvm.sh && nvm install && {{.COMMAND}}"

  init:
    desc: Initialize project environment
    cmds:
      - echo 'Installing node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm install" }

      - echo 'Installing husky pre-commit...'
      - task: _with_nvm
        vars: { COMMAND: "npm run prepare" }

  lint:
    desc: Lint project
    cmds:
      - echo 'Running prettier checks...'
      - task: _prettier
        vars: { COMMAND: "--check ." }

      - echo 'Running cargo checks...'
      - cargo check
      - cargo fmt -- --check
      - cargo clippy

      - echo 'Running compile checks...'
      - cargo rustc

  lint-fix:
    desc: Lint fix project
    cmds:
      - echo 'Running prettier fixes...'
      - task: _prettier
        vars: { COMMAND: "--write ." }

      - echo 'Running cargo fixes...'
      - cargo check
      - cargo fmt
      - cargo clippy

      - echo 'Running compile fixes...'
      - cargo fix --allow-staged --allow-dirty

  build:
    desc: Build project
    cmds:
      - echo 'Building project...'
      - cargo build {{.CLI_ARGS}}

  run:
    desc: Run cargo
    cmds:
      - echo 'Running project...'
      - cargo run -- {{.CLI_ARGS}}

  test:
    desc: Test project
    cmds:
      - echo 'Running tests...'
      - cargo test
        {{if .NAME}} {{.NAME}}{{end}}
        -- --nocapture {{.CLI_ARGS}}
    vars:
      NAME: '{{.NAME | default ""}}'

  test-coverage:
    desc: Test project with coverage
    cmds:
      - cargo llvm-cov test --fail-under-lines={{.LLVM_TARGET_COVERAGE}}

  test-coverage-html:
    desc: Open coverage report in browser
    cmds:
      - cargo llvm-cov --open

  test-generate-data:
    desc: Generate test data
    cmds:
      - echo 'Generating test data...'
      - task: tests-data-plans:generate_all

  clean:
    desc: Clean project environment
    cmds:
      - echo 'Cleaning node dependencies...'
      - rm -rf {{.NENV}}

      - echo 'Cleaning cargo cache...'
      - cargo clean

      - echo 'Cleaning shims...'
      - task: shims:clean

  dependencies-update:
    desc: Update dependencies
    cmds:
      - echo 'Updating node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm update" }
      - task: _with_nvm
        vars: { COMMAND: "npm outdated" }
      - task: _with_nvm
        vars: { COMMAND: "npm audit" }

      - echo 'Updating cargo dependencies...'
      - cargo update

  update-from-template:
    desc: Update project from template
    cmds:
      - echo 'Updating project from template...'
      - cookiecutter
        --no-input
        --overwrite-if-exists
        --output-dir ../
        {{.TEMPLATE_PATH}}
        project_name='Terraform Plan Format'
        project_slug='tf-plan-format'
        node_version='v21.5.0'
        owner_name='Dmitry Ovsiannikov'
        owner_github_login='ovsds'
        scripts='false'
        services=''
    vars:
      TEMPLATE_PATH: '{{.TEMPLATE_PATH | default "https://github.com/ovsds/template-repository"}}'
